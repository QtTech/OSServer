<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<mapper namespace="com.bronze.ordersystem.food.dao.IFoodInfoDao">

	<resultMap type="FoodInfo" id="foodInfoMap">
		<id property="id" column="id" />
		<result property="name" column="name" />
		<result property="number" column="number" />
		<result property="description" column="description" />
		<result property="details" column="details" />
		<result property="default_count" column="default_count" />
		<result property="price" column="price" />
		<result property="largepic" column="largepic" />
		<result property="smallpic" column="smallpic" />
		<result property="cookby" column="cookby" />
	</resultMap>

	<resultMap type="SimpleFoodInfo" id="simpleFoodInfoMap">
		<id property="id" column="id" />
		<result property="name" column="name" />
	</resultMap>
	
	<insert id="addNewFood" parameterType="FoodInfo" flushCache="true">
		insert into OSFood values (#{id}, #{name}, #{number}, #{description}, 
		#{details}, #{default_count}, #{price}, #{largepic}, #{smallpic}, #{cookby})
	</insert>
	
	<select id="queryFood" resultMap="foodInfoMap" parameterType="FoodInfo" flushCache="true">
		select * from OSFood
		<where>
		<if test="id != null and id != ''">
			id = #{id}
		</if>
		<if test="name != null and name != ''">
			and name = #{name}
		</if>
		</where>
	</select>
	
	<select id="querySimpleFoodList" resultMap="simpleFoodInfoMap" flushCache="true">
		select id, name from OSFood
	</select>
	
	<select id="queryFoodNameMap" parameterType="java.util.List" resultMap="simpleFoodInfoMap" flushCache="true">
		select id, name from OSFood
		<where>
			id in
			<foreach collection="list" close=")" open="(" separator="," index="index" item="item">
				#{item}
			</foreach>
		</where>		
	</select>
	
	<delete id="removeFood" parameterType="FoodInfo" flushCache="true">
		delete from OSFood where id = #{id}
	</delete>
	
	<update id="updateFood" parameterType="FoodInfo" flushCache="true">
		update OSFood
		<set>
		<if test="name != null and name != ''">
			name = #{name},
		</if>
		<if test="number != null and number != ''">
			number = #{number},
		</if>
		<if test="description != null">
			description = #{description},
		</if>
		<if test="details != null">
			details = #{details},
		</if>
		<if test="default_count != null and default_count != 0">
			default_count = #{default_count},
		</if>
		<if test="price != null">
			price = #{price},
		</if>
		<if test="cookby != null">
			cookby = #{cookby},
		</if>
		<if test="largepic != null">
			largepic = #{largepic},
		</if>
		<if test="smallpic != null">
			smallpic = #{smallpic},
		</if>
		</set>
		where id = #{id}
	</update>
	
	<update id="updateFoodPhoto" parameterType="FoodInfo" flushCache="true">
		update OSFood
		<set>
		<if test="largepic != null">
			largepic = #{largepic},
		</if>
		<if test="smallpic != null">
			smallpic = #{smallpic},
		</if>
		</set>
		where id = #{id}
	</update>
	
	<select id="queryMenuListByName" resultMap="foodInfoMap" parameterType="FoodInfo" flushCache="true">
		select * from OSFood where name like '%${name}%'
 	</select>
 	
 	<select id="queryMenuListByCID" resultMap="foodInfoMap" parameterType="SimpleFoodInfo" flushCache="true">
		select OSFood.* from OSFood, OSFoodCategory
		<where>
			OSFood.id = OSFoodCategory.foodid 
			and OSFoodCategory.categoryid = #{id}
			<if test="name != null and name != ''">
				and OSFood.name like '%${name}%'
			</if>
		</where>
		order by OSFoodCategory.`index` asc
 	</select>
 	
 	<select id="queryFoodNumber" resultType="string" flushCache="true">
 		select number from OSFood order by cast(number as unsigned)
 	</select>
 	
 	<select id="queryFoodWithoutCategory" resultMap="foodInfoMap" flushCache="true">
 		select osfood.* from osfood
 		<where>
			osfood.id not in (select osfoodcategory.foodid from osfoodcategory)
 		</where>
 	</select>
</mapper>
